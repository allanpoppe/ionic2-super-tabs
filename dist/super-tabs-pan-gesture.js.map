{"version":3,"file":"super-tabs-pan-gesture.js","sourceRoot":"","sources":["../src/super-tabs-pan-gesture.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAsB,MAAM,wBAAwB,CAAC;AAI1E,IAAA;IAwBC,6BACS,GAAa,EACb,EAAe,EACf,MAAuB,EACvB,GAAc,EACd,kBAAkC;QAC1C,kEAAkE;;sEADxB;QAJlC,QAAG,GAAH,GAAG,CAAU;QACb,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAiB;QACvB,QAAG,GAAH,GAAG,CAAW;QACd,uBAAkB,GAAlB,kBAAkB,CAAgB;6BAnBX,CAAC;8BAEA,CAAC;yBAQF,EAAE;QAYjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAAC,MAAM,CAAC;QAErC,IAAI,CAAC,SAAS,CAAC,IAAI,CAClB,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EACtD,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EACpD,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAClD,CAAC;QAEF,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,KAAK,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAC9C;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,KAAK,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC;SAC/C;KAED;IAED,qCAAO,GAAP;QACC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,EAAE,EAAJ,CAAI,CAAC,CAAC;KACnC;IAEO,sCAAQ,GAAhB,UAAiB,EAAc;;QAG9B,IAAM,MAAM,GAAuB,YAAY,CAAC,EAAE,CAAC,EAClD,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QAEvB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,IAAI,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;;YAE1E,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,MAAM,CAAC;SACP;;QAID,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC3E,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC;KAEzB;IAEO,qCAAO,GAAf,UAAgB,EAAc;;QAG7B,IAAM,MAAM,GAAuB,YAAY,CAAC,EAAE,CAAC,CAAC;QAEpD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAEtB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,aAAa,KAAK,SAAS,CAAC;;gBAE3C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAG3B,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC;;gBAE/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACxB,IAAI;gBACH,MAAM,CAAC;SAER;;QAGD,EAAE,CAAC,eAAe,EAAE,CAAC;QACrB,EAAE,CAAC,cAAc,EAAE,CAAC;;QAGpB,IAAM,MAAM,GAAW,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC;;QAGhD,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;QAGnC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC;KAEzB;IAEO,oCAAM,GAAd,UAAe,EAAc;;QAG5B,IAAM,MAAM,GAAuB,YAAY,CAAC,EAAE,CAAC,CAAC;QAEpD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;YAEjC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,CAAC;gBAExC,IAAM,SAAS,GAAW,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAE7D,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC;oBAC/C,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBACjE,IAAI;oBAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAErC;YAAC,IAAI;gBAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAEvC;QAED,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;KAE/B;IAEO,0CAAY,GAApB,UAAqB,SAA6B;QAEjD,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EACzD,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAC7B,MAAM,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAC3C,MAAM,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAC3C,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;QAEzD,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;;;YAG3C,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,EACvC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAE1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC;SAClD;KAED;8BA3JF;IA6JC,CAAA;AAxJD,+BAwJC","sourcesContent":["import { Platform } from 'ionic-angular';\r\nimport { pointerCoord, PointerCoordinates } from 'ionic-angular/util/dom';\r\nimport { SuperTabsConfig } from './components/super-tabs';\r\nimport { Renderer2 } from '@angular/core';\r\n\r\nexport class SuperTabsPanGesture {\r\n\r\n\tonMove: (delta: number) => void;\r\n\r\n\tonEnd: (shortSwipe: boolean, shortSwipeDelta?: number) => void;\r\n\r\n\tprivate initialCoords: PointerCoordinates;\r\n\r\n\tprivate initialTimestamp: number;\r\n\r\n\tprivate leftThreshold: number = 0;\r\n\r\n\tprivate rightThreshold: number = 0;\r\n\r\n\tprivate shouldCapture: boolean;\r\n\r\n\tprivate isDragging: boolean;\r\n\r\n\tprivate lastPosX: number;\r\n\r\n\tprivate listeners: Function[] = [];\r\n\r\n\tpublic selectedTabIndex: number;\r\n\r\n\tconstructor(\r\n\t\tprivate plt: Platform,\r\n\t\tprivate el: HTMLElement,\r\n\t\tprivate config: SuperTabsConfig,\r\n\t\tprivate rnd: Renderer2,\r\n\t\tprivate globalSwipeEnabled: boolean = true\r\n\t\t// private swipeEnabledPerTab: { [index: number]: boolean } = null\r\n\t) {\r\n\t\tif (!this.globalSwipeEnabled) return;\r\n\r\n\t\tthis.listeners.push(\r\n\t\t\trnd.listen(el, 'touchstart', this._onStart.bind(this)),\r\n\t\t\trnd.listen(el, 'touchmove', this._onMove.bind(this)),\r\n\t\t\trnd.listen(el, 'touchend', this._onEnd.bind(this))\r\n\t\t);\r\n\r\n\t\tif (config.sideMenu === 'both' || config.sideMenu === 'left') {\r\n\t\t\tthis.leftThreshold = config.sideMenuThreshold;\r\n\t\t}\r\n\t\t\r\n\t\tif (config.sideMenu === 'both' || config.sideMenu === 'right') {\r\n\t\t\tthis.rightThreshold = config.sideMenuThreshold;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.listeners.forEach(fn => fn());\r\n\t}\r\n\r\n\tprivate _onStart(ev: TouchEvent) {\r\n\t\t// if (this.swipeEnabledPerTab[this.selectedTabIndex] === false) return;\r\n\r\n\t\tconst coords: PointerCoordinates = pointerCoord(ev),\r\n\t\t\tvw = this.plt.width();\r\n\r\n\t\tif (coords.x < this.leftThreshold || coords.x > vw - this.rightThreshold) {\r\n\t\t\t// ignore this gesture, it started in the side menu touch zone\r\n\t\t\tthis.shouldCapture = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// the starting point looks good, let's see what happens when we move\r\n\r\n\t\tthis.initialCoords = coords;\r\n\t\tif (this.config.shortSwipeDuration > 0) this.initialTimestamp = Date.now();\r\n\t\tthis.lastPosX = coords.x;\r\n\r\n\t}\r\n\r\n\tprivate _onMove(ev: TouchEvent) {\r\n\t\t// if (this.swipeEnabledPerTab[this.selectedTabIndex] === false) return;\r\n\t\t\r\n\t\tconst coords: PointerCoordinates = pointerCoord(ev);\r\n\r\n\t\tif (!this.isDragging) {\r\n\r\n\t\t\tif (typeof this.shouldCapture !== 'boolean')\r\n\t\t\t\t// we haven't decided yet if we want to capture this gesture\r\n\t\t\t\tthis.checkGesture(coords);\r\n\r\n\r\n\t\t\tif (this.shouldCapture === true)\r\n\t\t\t\t// gesture is good, let's capture all next onTouchMove events\r\n\t\t\t\tthis.isDragging = true;\r\n\t\t\telse\r\n\t\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// stop anything else from capturing these events, to make sure the content doesn't slide\r\n\t\tev.stopPropagation();\r\n\t\tev.preventDefault();\r\n\r\n\t\t// get delta X\r\n\t\tconst deltaX: number = this.lastPosX - coords.x;\r\n\r\n\t\t// emit value\r\n\t\tthis.onMove && this.onMove(deltaX);\r\n\r\n\t\t// update last X value\r\n\t\tthis.lastPosX = coords.x;\r\n\r\n\t}\r\n\r\n\tprivate _onEnd(ev: TouchEvent) {\r\n\t\t// if (this.swipeEnabledPerTab[this.selectedTabIndex] === false) return;\r\n\t\t\r\n\t\tconst coords: PointerCoordinates = pointerCoord(ev);\r\n\r\n\t\tif (this.shouldCapture === true) {\r\n\r\n\t\t\tif (this.config.shortSwipeDuration > 0) {\r\n\r\n\t\t\t\tconst deltaTime: number = Date.now() - this.initialTimestamp;\r\n\r\n\t\t\t\tif (deltaTime <= this.config.shortSwipeDuration)\r\n\t\t\t\t\tthis.onEnd && this.onEnd(true, coords.x - this.initialCoords.x);\r\n\t\t\t\telse this.onEnd && this.onEnd(false);\r\n\r\n\t\t\t} else this.onEnd && this.onEnd(false);\r\n\r\n\t\t}\r\n\r\n\t\tthis.isDragging = false;\r\n\t\tthis.shouldCapture = undefined;\r\n\r\n\t}\r\n\r\n\tprivate checkGesture(newCoords: PointerCoordinates) {\r\n\r\n\t\tconst radians = this.config.maxDragAngle * (Math.PI / 180),\r\n\t\t\tmaxCosine = Math.cos(radians),\r\n\t\t\tdeltaX = newCoords.x - this.initialCoords.x,\r\n\t\t\tdeltaY = newCoords.y - this.initialCoords.y,\r\n\t\t\tdistance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n\r\n\t\tif (distance >= this.config.dragThreshold) {\r\n\t\t\t// swipe is long enough so far\r\n\t\t\t// lets check the angle\r\n\t\t\tconst angle = Math.atan2(deltaY, deltaX),\r\n\t\t\t\tcosine = Math.cos(angle);\r\n\r\n\t\t\tthis.shouldCapture = Math.abs(cosine) > maxCosine;\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n"]}