{"version":3,"file":"super-tab.js","sourceRoot":"","sources":["../../src/components/super-tab.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tComponent, Input, Renderer, ElementRef, ViewEncapsulation, Optional, ComponentFactoryResolver,\r\n\tNgZone, ViewContainerRef, ViewChild, OnInit, AfterViewInit, OnDestroy, ChangeDetectorRef, ErrorHandler\r\n} from '@angular/core';\r\nimport {\r\n\tNavControllerBase, App, Config, Platform, GestureController, DeepLinker, DomController, NavOptions,\r\n\tViewController\r\n} from 'ionic-angular';\r\nimport { TransitionController } from 'ionic-angular/transitions/transition-controller';\r\nimport { SuperTabs } from './super-tabs';\r\n\r\n@Component({\r\n\tselector: 'super-tab',\r\n\ttemplate: '<div #viewport></div><div class=\"nav-decor\"></div>',\r\n\tencapsulation: ViewEncapsulation.None\r\n})\r\nexport class SuperTab extends NavControllerBase implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n\t/**\r\n\t * Boolean indicating whether swiping is enabled for this tab\r\n\t * @type {boolean}\r\n\t */\r\n\t@Input()\r\n\tprivate swipeEnabled: boolean;\r\n\r\n\t/**\r\n\t * Title of the tab\r\n\t */\r\n\t@Input()\r\n\ttitle: string;\r\n\r\n\t// TODO find less hacky approach\r\n\t// needed to make Ionic Framework think this is a tabs component... needed for Deeplinking\r\n\tget tabTitle() {\r\n\t\treturn this.title;\r\n\t}\r\n\r\n\t// needed to make Ionic Framework think this is a tabs component... needed for Deeplinking\r\n\tget index() {\r\n\t\treturn this.parent.getTabIndexById(this.tabId);\r\n\t}\r\n\r\n\t/**\r\n\t * Name of the ionicon to use\r\n\t */\r\n\t@Input()\r\n\ticon: string;\r\n\r\n\t/**\r\n\t * @input {Page} Set the root page for this tab.\r\n\t */\r\n\t@Input() root: any;\r\n\r\n\t/**\r\n\t * @input {object} Any nav-params to pass to the root page of this tab.\r\n\t */\r\n\t@Input() rootParams: any;\r\n\r\n\t@Input('id')\r\n\ttabId: string;\r\n\r\n\tget _tabId() {\r\n\t\treturn this.tabId;\r\n\t}\r\n\r\n\t/**\r\n\t * Badge value\r\n\t * @type {Number}\r\n\t */\r\n\t@Input()\r\n\tbadge: number;\r\n\r\n\r\n\t/**\r\n\t * Enable/disable swipe to go back for iOS\r\n\t * @return {boolean}\r\n\t */\r\n\t@Input()\r\n\tget swipeBackEnabled(): boolean {\r\n\t\treturn this._sbEnabled;\r\n\t}\r\n\tset swipeBackEnabled(val: boolean) {\r\n\t\tthis._sbEnabled = Boolean(val);\r\n\t\tthis._swipeBackCheck();\r\n\t}\r\n\r\n\t/**\r\n\t * @hidden\r\n\t */\r\n\t@ViewChild('viewport', { read: ViewContainerRef })\r\n\tset _vp(val: ViewContainerRef) {\r\n\t\tthis.setViewport(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the tab has been loaded\r\n\t * @type {boolean}\r\n\t */\r\n\tprivate loaded: boolean = false;\r\n\r\n\t/**\r\n\t * A promise that resolves when the component has initialized\r\n\t */\r\n\tprivate init: Promise<any>;\r\n\r\n\t/**\r\n\t * Function to call to resolve the init promise\r\n\t */\r\n\tprivate initResolve: Function;\r\n\r\n\tconstructor(\r\n\t\tparent: SuperTabs,\r\n\t\tapp: App,\r\n\t\tconfig: Config,\r\n\t\tplt: Platform,\r\n\t\tel: ElementRef,\r\n\t\tzone: NgZone,\r\n\t\trnd: Renderer,\r\n\t\tcfr: ComponentFactoryResolver,\r\n\t\tgestureCtrl: GestureController,\r\n\t\ttransCtrl: TransitionController,\r\n\t\terrorHandler: ErrorHandler,\r\n\t\t@Optional() private linker: DeepLinker,\r\n\t\tprivate _dom: DomController,\r\n\t\tprivate cd: ChangeDetectorRef\r\n\t) {\r\n\t\tsuper(parent, app, config, plt, el, zone, rnd, cfr, gestureCtrl, transCtrl, linker, _dom, errorHandler);\r\n\t\tthis.init = new Promise<void>(resolve => this.initResolve = resolve);\r\n\t}\r\n\r\n\t_didEnter(view: ViewController) {\r\n\t\tif (this.loaded) {\r\n\t\t\tsuper._didEnter(view);\r\n\t\t}\r\n\t}\r\n\r\n\t_willEnter(view: ViewController) {\r\n\t\tif (this.loaded) {\r\n\t\t\tsuper._willEnter(view);\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.parent.addTab(this);\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t\tthis.initResolve();\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.destroy();\r\n\t}\r\n\r\n\tsetActive(active: boolean) {\r\n\t\tif (active) {\r\n\t\t\tthis.cd.reattach();\r\n\t\t\tthis.cd.detectChanges();\r\n\t\t} else if (!active) {\r\n\t\t\tthis.cd.detach();\r\n\t\t}\r\n\t}\r\n\r\n\tasync load(load: boolean) {\r\n\t\tif (load && !this.loaded) {\r\n\t\t\tawait this.init;\r\n\t\t\tawait this.push(this.root, this.rootParams, { animate: false });\r\n\t\t\tthis.loaded = true;\r\n\t\t}\r\n\t}\r\n\r\n\tsetBadge(value: number) {\r\n\t\tthis.badge = value;\r\n\t}\r\n\r\n\tclearBadge() {\r\n\t\tdelete this.badge;\r\n\t}\r\n\r\n\tincreaseBadge(increaseBy: number = 1) {\r\n\t\tthis.badge += increaseBy;\r\n\t}\r\n\r\n\tdecreaseBadge(decreaseBy: number = 1) {\r\n\t\tthis.badge = Math.max(0, this.badge - decreaseBy);\r\n\t}\r\n\r\n\tsetWidth(width: number) {\r\n\t\tthis.setElementStyle('width', width + 'px');\r\n\t}\r\n\r\n\tgoToRoot(opts: NavOptions): Promise<any> {\r\n\t\treturn this.setRoot(this.root, this.rootParams, opts, null);\r\n\t}\r\n\r\n}\r\n"]}